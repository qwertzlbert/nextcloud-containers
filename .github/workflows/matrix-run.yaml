name: Build images

permissions:
  packages: write
  contents: write

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - '.github/**'
      - 'README.md'
  push:
    branches:
      - main
    paths-ignore:
      - '.github/**'
      - 'README.md'

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v34
      - name: Set notification matrix
        id: matrix
        run: |
          echo "matrix=$(.github/bin/find-docker-files.py ${{ steps.changed-files.outputs.all_changed_files }})" >> $GITHUB_OUTPUT

  build:
    environment: ${{ github.event_name == 'push' && 'main' || 'dev' }}
    needs:
      - setup
    runs-on: "${{ matrix.runner }}"
    timeout-minutes: 240
    outputs:
      targettag: ${{ steps.targettag.outputs.value }}
      refsha: ${{ steps.refsha.outputs.value }}
      combined_tag: ${{ steps.targettag.outputs.value }}-${{ steps.refsha.outputs.value }}
      manifest: ${{ steps.manifest_output.outputs.value }}
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix: "${{ fromJson(needs.setup.outputs.matrix) }}"
    steps:
      - uses: actions/checkout@v3
      
      - name: Log in to Container registry
        uses: redhat-actions/podman-login@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set manifest output
        id: manifest_output
        run: |
          echo "value=${{ matrix.manifest }}" >> $GITHUB_OUTPUT

      - name: Set target tag default
        id: targettag
        run: |
          TARGET_TAG=${{ matrix.target }}
          if [ -z "$TARGET_TAG" ]; then
            export TARGET_TAG=target
          fi
          echo "value=${TARGET_TAG}" >> $GITHUB_OUTPUT

      - name: Set reference sha
        id: refsha
        run: |
          REF_SHA=${{ github.event.pull_request.base.sha }}
          if [ -z "$REF_SHA" ]; then
            export REF_SHA=${{ github.event.before }}
            if [ -z "$REF_SHA" ]; then
              export REF_SHA=${{ github.sha }}
            fi
          fi
          echo "value=${REF_SHA}" >> $GITHUB_OUTPUT
      
      - name: Build OCI image
        id: buildah_build
        uses: redhat-actions/buildah-build@v2
        with:
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.base }}:latest
            ghcr.io/${{ github.repository_owner }}/${{ matrix.base }}:${{ steps.targettag.outputs.value }}
            ghcr.io/${{ github.repository_owner }}/${{ matrix.base }}:${{ steps.refsha.outputs.value }}
            ghcr.io/${{ github.repository_owner }}/${{ matrix.base }}:${{ matrix.version }}
            ghcr.io/${{ github.repository_owner }}/${{ matrix.base }}:${{ steps.targettag.outputs.value }}-${{ matrix.version }}
          containerfiles: |
            "${{ matrix.base }}/Dockerfile"
          build-args: |
            git_version=${{ matrix.git_version }}
          oci: true

      - name: Echo Outputs
        run: |
          echo "Image: ${{ steps.buildah_build.outputs.image }}"
          echo "Tags: ${{ steps.buildah_build.outputs.tags }}"
          echo "Tagged Image: ${{ steps.buildah_build.outputs.image-with-tag }}"

      - name: Push to registry
        id: image_push
        uses: redhat-actions/push-to-registry@v2
        with:
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.base }}:latest
            ghcr.io/${{ github.repository_owner }}/${{ matrix.base }}:${{ steps.targettag.outputs.value }}
            ghcr.io/${{ github.repository_owner }}/${{ matrix.base }}:${{ steps.refsha.outputs.value }}
            ghcr.io/${{ github.repository_owner }}/${{ matrix.base }}:${{ matrix.version }}
            ghcr.io/${{ github.repository_owner }}/${{ matrix.base }}:${{ steps.targettag.outputs.value }}-${{ matrix.version }} 

  extract_artifacts:
    environment: ${{ github.event_name == 'push' && 'main' || 'dev' }}
    needs:
      - setup
      - build
    runs-on: "${{ matrix.runner }}"
    timeout-minutes: 240
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix: "${{ fromJson(needs.setup.outputs.matrix) }}"
    if: ${{ needs.build.outputs.manifest != '' }}
    steps:
      - uses: actions/checkout@v3
      - name: Create Release
        if: ${{ github.event_name == 'push' }}
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          fail_on_unmatched_files: false
          tag_name: ${{ matrix.version }}-${{ needs.build.outputs.refsha }}
          name: ${{ matrix.base }} build release for ${{ matrix.version }} on ${{ needs.build.outputs.targettag }}
          body: |
            Build release for ${{ matrix.base }} version ${{ matrix.version }}.

            ##### Container released to GHCR

            * https://github.com/qwertzlbert/nextcloud-containers/pkgs/container/${{ matrix.base }}

            ###### Here are the new container tags

            * `${{ needs.build.outputs.targettag }}`
            * `${{ needs.build.outputs.targettag }}-${{ matrix.version }}`
            * `${{ needs.build.outputs.refsha }}`
            * `${{ matrix.version }}`

          files: |
            /tmp/artifacts/*
      - name: Cleanup
        run: |
          sudo rm -rf "/tmp/${{ matrix.base }}"
